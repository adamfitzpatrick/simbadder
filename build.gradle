buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

group = 'adamfitzpatrick'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'docker'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'

jar {
    baseName = 'simbadder'
    version =  '0.2.0'
}

repositories {
    mavenCentral()
}

sourceSets {
    intTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/intTest/java')
        }
    }
}

configurations {
    intTestCompile.extendsFrom testCompile
    intTestRuntime.extendsFrom testRuntime
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web") { exclude module: "spring-boot-starter-logging" }
	compile("org.springframework.boot:spring-boot-starter-log4j")
    compile("org.springframework:spring-web")
    compile("com.fasterxml.jackson.core:jackson-databind")
    compile("org.springframework.hateoas:spring-hateoas")
    compile("org.springframework:spring-oxm:3.0.4.RELEASE")
    compile("org.apache.commons:commons-io:1.3.2")
    compile("org.slf4j:slf4j-api:1.7.12")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("junit:junit")
    testCompile("org.easymock:easymock:3.4")
    testCompile("com.jayway.restassured:spring-mock-mvc:2.5.0")
    testCompile("com.jayway.restassured:rest-assured:2.5.0")
}

checkstyle {
   configFile = new File(rootDir, "config/checkstyle.xml")
}

jacoco {
    toolVersion = "0.7.1.201405082137"
    reportsDir = file("$buildDir/reportscoverage")
}
jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/reports/coverage/"
    }
}

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
    jacoco {
        append = false
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpFile = file("$buildDir/jacoco/classpathdumps")
    }
}

task intTest(type: Test) {
    testClassesDir = sourceSets.intTest.output.classesDir
    classpath = sourceSets.intTest.runtimeClasspath
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}

task buildDocker(type: Docker, dependsOn: build) {
  push = false
  applicationName = jar.baseName
  dockerfile = file('src/main/docker/Dockerfile')
  doFirst {
    copy {
      from jar
      into stageDir
    }
  }
}

build.dependsOn jacocoTestReport
check.dependsOn intTest
intTest.mustRunAfter test